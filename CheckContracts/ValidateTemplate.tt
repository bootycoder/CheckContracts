<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

using System;
using System.Collections.Generic;
using System.Linq;
using JetBrains.Annotations;

<#
var checksArray = new []
{
    Tuple.Create(
        "GreaterThan",
        new []{ "int", "double", "long", "byte", "short" },
        new []{"value", "minValue"},
        "value > minValue",
        "Value should be greater than {0}. Current value: {1}",
        "value, minValue",
        "Checks that input value is greater (and not equal with) minValue"
        )
};

#>


namespace CheckContracts
{
    partial class Validate
    {
<#
    foreach(var item in checksArray)
    {
        foreach(var type in item.Item2)
        {
        #>

        /// <summary>
        /// <#=item.Item7#>
        /// </summary>
        public static void <#=item.Item1#>(<#=string.Join(", ", item.Item3.Select(i=>string.Format("{0} {1}", type, i ) ) )#>, string errorFormat, params object[] args )
        {
            if(<#=item.Item4#>)
            {
                return;
            }

            var message = BuildMessage("<#=item.Item5#>", new object[]{ <#=item.Item6#> }, errorFormat, args);

            throw new InvalidOperationException(message);
        }
        <#
        }
    }


#>        
    }
}